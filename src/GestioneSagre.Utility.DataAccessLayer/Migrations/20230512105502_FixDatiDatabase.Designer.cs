// <auto-generated />
using System;
using GestioneSagre.Utility.DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestioneSagre.Utility.DataAccessLayer.Migrations
{
    [DbContext(typeof(UtilityDbContext))]
    [Migration("20230512105502_FixDatiDatabase")]
    partial class FixDatiDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GestioneSagre.Utility.Shared.Entities.ScontrinoPagato", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ScontrinoPagato", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("08db52d7-561c-8fe8-753a-8e6e38038a41"),
                            Value = "Pagato"
                        },
                        new
                        {
                            Id = new Guid("08db52d7-561c-9001-753a-8e6e38038a42"),
                            Value = "Non pagato"
                        });
                });

            modelBuilder.Entity("GestioneSagre.Utility.Shared.Entities.ScontrinoStato", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ScontrinoStato", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("08db52d7-561c-90e5-753a-8e6e38038a43"),
                            Value = "Aperto"
                        },
                        new
                        {
                            Id = new Guid("08db52d7-561c-90e9-753a-8e6e38038a44"),
                            Value = "In elaborazione"
                        },
                        new
                        {
                            Id = new Guid("08db52d7-561c-90ec-753a-8e6e38038a45"),
                            Value = "Da incassare"
                        },
                        new
                        {
                            Id = new Guid("08db52d7-561c-90ef-753a-8e6e38038a46"),
                            Value = "Chiuso"
                        },
                        new
                        {
                            Id = new Guid("08db52d7-561c-90f1-753a-8e6e38038a47"),
                            Value = "Annullato"
                        });
                });

            modelBuilder.Entity("GestioneSagre.Utility.Shared.Entities.TipoCliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoCliente", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("08db52d7-561c-9170-753a-8e6e38038a48"),
                            Value = "Cliente"
                        },
                        new
                        {
                            Id = new Guid("08db52d7-561c-9173-753a-8e6e38038a49"),
                            Value = "Staff"
                        });
                });

            modelBuilder.Entity("GestioneSagre.Utility.Shared.Entities.TipoPagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoPagamento", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("08db52d7-561c-924e-753a-8e6e38038a4c"),
                            Value = "Contanti"
                        },
                        new
                        {
                            Id = new Guid("08db52d7-561c-9252-753a-8e6e38038a4d"),
                            Value = "Carta di credito"
                        },
                        new
                        {
                            Id = new Guid("08db52d7-561c-9255-753a-8e6e38038a4e"),
                            Value = "Carta di debito"
                        });
                });

            modelBuilder.Entity("GestioneSagre.Utility.Shared.Entities.TipoScontrino", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoScontrino", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("08db52d7-561c-91d7-753a-8e6e38038a4a"),
                            Value = "Pagamento"
                        },
                        new
                        {
                            Id = new Guid("08db52d7-561c-91da-753a-8e6e38038a4b"),
                            Value = "Omaggio"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
