// <auto-generated />
using System;
using GestioneSagre.Utility.DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestioneSagre.Utility.DataAccessLayer.Migrations
{
    [DbContext(typeof(UtilityDbContext))]
    [Migration("20230527104809_RefactoringData")]
    partial class RefactoringData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GestioneSagre.Utility.Shared.Entities.ScontrinoPagato", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ScontrinoPagato", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("5168436b-4618-4fcc-957d-ab1974e16cbe"),
                            Value = "Pagato"
                        },
                        new
                        {
                            Id = new Guid("95e5b0c1-a51a-4d29-91a7-db01c49f5f3f"),
                            Value = "Non pagato"
                        });
                });

            modelBuilder.Entity("GestioneSagre.Utility.Shared.Entities.ScontrinoStato", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ScontrinoStato", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("da58ff5f-0f08-4d0b-8942-1e080fea763c"),
                            Value = "Aperto"
                        },
                        new
                        {
                            Id = new Guid("19f815c8-2018-47a3-a6e9-be0bac57205a"),
                            Value = "In elaborazione"
                        },
                        new
                        {
                            Id = new Guid("d5199f4a-df16-40af-8100-2c4c4f78466f"),
                            Value = "Da incassare"
                        },
                        new
                        {
                            Id = new Guid("0e838069-6094-4fca-ad09-4fca2cee173e"),
                            Value = "Chiuso"
                        },
                        new
                        {
                            Id = new Guid("318b6631-1c19-4e06-bd1f-bf14e86a8d24"),
                            Value = "Annullato"
                        });
                });

            modelBuilder.Entity("GestioneSagre.Utility.Shared.Entities.TipoCliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoCliente", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("1c48295b-6dec-4e82-9377-787961208a48"),
                            Value = "Cliente"
                        },
                        new
                        {
                            Id = new Guid("4e1a05a4-2655-4466-b3cc-8ba3e2dbe271"),
                            Value = "Staff"
                        });
                });

            modelBuilder.Entity("GestioneSagre.Utility.Shared.Entities.TipoPagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoPagamento", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("bbd45d77-33de-42df-ba62-573e7953153b"),
                            Value = "Contanti"
                        },
                        new
                        {
                            Id = new Guid("a7e910b0-67c9-4913-a279-e43674375bcf"),
                            Value = "Carta di credito"
                        },
                        new
                        {
                            Id = new Guid("9a3b35b1-0640-4d6d-8952-e56c5962c15c"),
                            Value = "Carta di debito"
                        });
                });

            modelBuilder.Entity("GestioneSagre.Utility.Shared.Entities.TipoScontrino", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoScontrino", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("4237bc9e-8751-4340-a31d-7babab87cc72"),
                            Value = "Pagamento"
                        },
                        new
                        {
                            Id = new Guid("eb036a5f-95bc-4818-ac5a-e14655604b06"),
                            Value = "Omaggio"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
